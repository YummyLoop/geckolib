configurations {
    shadow
}

architectury {
    platformSetupLoomIde()
}

loom {
    mixinConfig "fabric.mixins.json"
    mixinConfigs = ["fabric.mixins.json"]
}

apply from: "${rootDir}/repositories.gradle"
apply from: "${rootProject.project("common").projectDir}/shadow.gradle"

dependencies {
    // Minecraft/Fabric deps
    modCompile "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modCompile "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    modCompileOnly "vazkii.patchouli:Patchouli:1.16.4-48-FABRIC"

    modCompile "me.shedaniel:architectury:${rootProject.architectury_version}:fabric"

    // Actual dependencies
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.0'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.0'
    implementation 'com.eliotlash.molang:molang:SNAPSHOT.12'
    implementation 'com.eliotlash.mclib:mclib:SNAPSHOT.12'

    // Shaded dependencies
    shadow group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.0'
    shadow group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.0'
    shadow 'com.eliotlash.molang:molang:SNAPSHOT.12'
    shadow 'com.eliotlash.mclib:mclib:SNAPSHOT.12'

    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'

    test {
        useJUnitPlatform()
    }
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'

    compileOnly(project(path: ":common")) {
        transitive = false
    }
    runtimeOnly(project(path: ":common", configuration: "transformDevelopmentFabric")) {
        transitive = false
    }
    shadow(project(path: ":common", configuration: "transformProductionFabric")) {
        transitive = false
    }

    // Extra stuff
    modImplementation "com.terraformersmc:modmenu:${rootProject.fabric_mod_ModMenu}"
    modCompileOnly ("me.shedaniel:RoughlyEnoughItems-api:${rootProject.fabric_mod_REI}")
    modRuntime ("me.shedaniel:RoughlyEnoughItems:${rootProject.fabric_mod_REI}")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}


shadowJar {
    configurations = [project.configurations.shadow]
    from sourceSets.main.allSource
    duplicatesStrategy = 'exclude'
    relocate 'com.eliotlash', 'software.bernie.shadowed.eliotlash'
    relocate 'com.fasterxml', 'software.bernie.shadowed.fasterxml'
    classifier 'shadow'
}


remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archivePath)
    classifier "fabric"
}
