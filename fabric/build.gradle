plugins {
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow'
    id 'com.matthewprenger.cursegradle'
}

configurations {
    shadow
}

architectury {
    platformSetupLoomIde()
}

apply from: "${rootDir}/repositories.gradle"
apply from: "${rootProject.project("common").projectDir}/shadow.gradle"

dependencies {
    // Minecraft/Fabric deps
    modCompile "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modCompile "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    modCompileOnly "vazkii.patchouli:Patchouli:1.16.4-48-FABRIC"

    modCompile "me.shedaniel:architectury:${rootProject.architectury_version}:fabric"

    // Actual dependencies
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.0'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.0'
    compile 'com.eliotlash.molang:molang:SNAPSHOT.12'
    compile 'com.eliotlash.mclib:mclib:SNAPSHOT.12'

    // Shaded dependencies
    shadow group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.0'
    shadow group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.0'
    shadow 'com.eliotlash.molang:molang:SNAPSHOT.12'
    shadow 'com.eliotlash.mclib:mclib:SNAPSHOT.12'

    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'

    test {
        useJUnitPlatform()
    }
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'

    compileOnly(project(path: ":common")) {
        transitive = false
    }
    runtimeOnly(project(path: ":common", configuration: "transformDevelopmentFabric")) {
        transitive = false
    }
    shadow(project(path: ":common", configuration: "transformProductionFabric")) {
        transitive = false
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

import groovy.json.JsonOutput
import groovy.json.JsonSlurper
//processResources {
//    doLast {
//        def jsonMinifyStart = System.currentTimeMillis()
//        def jsonMinified = 0
//        def jsonBytesSaved = 0
//        fileTree(dir: outputs.files.asPath, include: '**/*.json').each {
//            File file = it
//            jsonMinified++
//            def oldLength = file.length()
//            file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
//            jsonBytesSaved += oldLength - file.length()
//        }
//        println('Minified ' + jsonMinified + ' json files. Saved ' + jsonBytesSaved + ' bytes. Took ' + (System.currentTimeMillis() - jsonMinifyStart) + 'ms.')
//    }
//}


shadowJar {
    configurations = [project.configurations.shadow]
    from sourceSets.main.allSource
    duplicatesStrategy = 'exclude'
    relocate 'com.eliotlash', 'software.bernie.shadowed.eliotlash'
    relocate 'com.fasterxml', 'software.bernie.shadowed.fasterxml'
    classifier 'shadow'
}


remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archivePath)
    classifier "fabric"
}

//
//artifacts {
//    archives shadowJar
//}
//
//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            artifact shadowJar
//            artifact sourcesJar
//            artifactId = project.archives_base_name
//        }
//    }
//    repositories {
//        maven {
//            url "file:///${project.projectDir}/mcmodsrepo"
//        }
//    }
//}
//
//publishing {
//    repositories {
//        maven {
//            url repsyUrl
//            credentials {
//                def envUsername = System.getenv("repsyUsername")
//                def envPassword = System.getenv("repsyPassword")
//                username = envUsername == null ? findProperty("repsyUsername") : envUsername
//                password = envPassword == null ? findProperty("repsyPassword") : envPassword
//            }
//        }
//    }
//}
//
//if (file('key.properties').exists()) {
//    curseforge {
//
//        def curseProp = new Properties()
//        File secretPropsFile = file("key.properties")
//        curseProp.load(secretPropsFile.newInputStream())
//
//        project {
//            apiKey = curseProp.getProperty('curseKey')
//            id = "398667"
//            releaseType = "release"
//            changelogType = 'text'
//            changelog = file('changelog.txt')
//            addGameVersion("1.16.4")
//            addGameVersion("1.16.5")
//            addGameVersion("Fabric")
//            addGameVersion("Java 8")
//
//            relations {
//                requiredDependency 'fabric-api'
//            }
//            mainArtifact(remapJar)
//
//            afterEvaluate {
//                uploadTask.dependsOn("remapJar")
//            }
//        }
//        options {
//            //debug = true
//            forgeGradleIntegration = false
//        }
//    }
//}