plugins {
    id "architectury-plugin"
    id "forgified-fabric-loom" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "forgified-fabric-loom"

    loom {
        silentMojangMappingsLicense()
        mixinConfig "fabric.mixins.json"
        mixinConfigs = ["fabric.mixins.json"]
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        //mappings loom.officialMojangMappings()
        mappings "net.fabricmc:yarn:${rootProject.yarn_mappings}:v2"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"

    archivesBaseName = project.archives_base_name
    def snapshotVersion = System.getenv("GITHUB_RUN_NUMBER")
    version = snapshotVersion == null ? project.mod_version : "SNAPSHOT-" + snapshotVersion
    group = project.maven_group

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"

        // The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
        // JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
        // We'll use that if it's available, but otherwise we'll use the older option.
        def targetVersion = 8
        if (JavaVersion.current().isJava9Compatible()) {
            options.release = targetVersion
        }
    }

    java {
        withSourcesJar()
    }

    jar {
        from "LICENSE"
        manifest {
            attributes([
                    "Specification-Title"     : "GeckoLib",
                    "Specification-Vendor"    : "Gecko",
                    "Specification-Version"   : "1", // We are version 1 of ourselves
                    "Implementation-Title"    : project.name,
                    "Implementation-Version"  : "${rootProject.mod_version}",
                    "Implementation-Vendor"   : "Gecko",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
            ])
        }
    }
}


