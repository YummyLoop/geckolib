plugins {
    id "com.github.johnrengelman.shadow"
}

configurations {
    shadow
}

//libsDirName = "../out" // Output location of jar instead of default build/libs

architectury {
    platformSetupLoomIde()
}

loom {
     useFabricMixin = true
}

apply from: "${rootDir}/repositories.gradle"
apply from: "${rootProject.project("common").projectDir}/shadow.gradle"

dependencies {
    forge "net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}"
    // Remove the next line if you don't want to depend on the API
    modCompile "me.shedaniel:architectury:${rootProject.architectury_version}:forge"

    // Extra dependencies

    compileOnly(project(path: ":common")) {
        transitive = false
    }
    runtimeOnly(project(path: ":common", configuration: "transformDevelopmentForge")) {
        transitive = false
    }
    shadow(project(path: ":common", configuration: "transformProductionForge")) {
        transitive = false
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadow]
    classifier "shadow"
}

remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archivePath)
    classifier "forge"
}